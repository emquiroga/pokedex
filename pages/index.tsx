import { useEffect, useState } from "react";
import type { NextPage } from 'next'
import Head from 'next/head'
import { Card } from "../components/Card";
import { PokedexLayout } from "../components/PokedexLayout";
import { useDebounceSearch } from "../hooks/useDebounceSearch";
import { fetchCardData, CardData } from "../services/fetchCardData";
import { getPokemonByName } from "../services/pokeService";

import styles from '../styles/Home.module.css'
import Link from "next/link";
import { pokemonGenerations } from "../constants/constants";

const Home: NextPage = () => {
  const [search, setSearch] = useState("");
  const [pokemon, setPokemon] = useState<CardData | null>(null);
  const [error, setError] = useState<string | null>(null);
  const [isOpen, setIsOpen] = useState<boolean | null>(false);

  const handlePokedex = () => {
    setIsOpen(!isOpen);
  }

  const searchValue = useDebounceSearch(search.toLowerCase(), 400);

  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {
    setSearch(e.target.value);
  }

  useEffect(() => {
    if (searchValue.length > 2) {
      getPokemonByName(searchValue)
        .then(data => {
          const fetchedData = fetchCardData(data.data);
          setPokemon(fetchedData);
          setError(null)
        })
        .catch(() => {
          setError("Pokemon not found")
          setPokemon(null);
        })
    }
  }, [searchValue]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Pokenext!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <nav>
          <ul>
            {
              pokemonGenerations.map((generation) => (
                <li key={generation}>
                  <Link href={`/generation/${generation}`}>
                    <a>Generation {generation}</a>
                  </Link>
                </li>
              ))
            }
          </ul>
        </nav>
      </header>
      <main className={styles.main}>
        <h1 className={styles.title}> Pokedex </h1>
        <input type="text" placeholder="Find your pokemon by name" onChange={handleSearch} />
        {
          error && (
            <div>{error}</div>
          )
        }
        {
          pokemon && (
            <PokedexLayout>
              <Card id={pokemon.id} name={pokemon.name} image={pokemon.front_default} types={pokemon.types} />
            </PokedexLayout>
          )
        }
      </main>
    </div>
  )
}

export default Home
